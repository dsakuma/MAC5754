#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1           0 3189 0 28 3 16 #"#lang plai-typed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; Basic expressions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numC"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"idC"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"plusC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"multC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"ifC"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"seqC"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"setC"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"letC"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"classC"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"methodC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"newC"
0 0 24 3 2 #" ("
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"sendC"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #") ("
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Sugared expressions"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numS"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"idS"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"plusS"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"bminusS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"uminusS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"multS"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 3 #"ifS"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"seqS"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 2 #"e2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"setS"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"letS"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"classS"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"methodS"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"newS"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 5 #"sendS"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #") ("
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #"; Removing the sugar"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 2 #" ["
0 0 14 3 2 #"as"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 3 1 #" "
0 0 14 3 2 #"as"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"numS"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"n"
0 0 24 3 10 #")        ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"idS"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"s"
0 0 24 3 10 #")        ("
0 0 14 3 3 #"idC"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"plusS"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 8 #")      ("
0 0 14 3 5 #"plusC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"multS"
0 0 24 3 4 #"   ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 8 #")      ("
0 0 14 3 5 #"multC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"bminusS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 8 #")      ("
0 0 14 3 5 #"plusC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"multC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"uminusS"
0 0 24 3 2 #" ("
0 0 14 3 1 #"e"
0 0 24 3 10 #")        ("
0 0 14 3 5 #"multC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"ifS"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 6 #")    ("
0 0 14 3 3 #"ifC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"seqS"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 6 #")    ("
0 0 14 3 4 #"seqC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 2 #"e1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 2 #"e2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"setS"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #") ("
0 0 14 3 4 #"setC"
0 0 24 3 2 #"  "
0 0 14 3 3 #"var"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"letS"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 6 #")    ("
0 0 14 3 4 #"letC"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"classS"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 2 #"m2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"classC"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 2 #"m2"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"methodS"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 7 #"methodC"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"newS"
0 0 24 3 5 #"    ("
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 3 #") ("
0 0 14 3 4 #"newC"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"sendS"
0 0 24 3 4 #"   ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #") ("
0 0 14 3 5 #"sendC"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 2 #") "
0 0 14 3 11 #"method-name"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #"; We need a new value for the box"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"numV"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"number"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"methodV"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"classV"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #") ("
0 0 14 3 2 #"m2"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 7 #"objectV"
0 0 24 3 2 #" ("
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 7 #"obj-env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #"; Bindings associate symbol with location"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"bind"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #") ("
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 5 #"boxof"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; Env remains the same, we only change the Binding"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 17 #"define-type-alias"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 24 3 1 #" "
0 0 14 3 7 #"Binding"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"mt-env"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 4 #"cons"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #"; Add Object in global environment"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"DummyClass"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"ObjectClass"
0 0 24 3 2 #" ("
0 0 14 3 6 #"classV"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"dummy_arg"
0 0 24 3 2 #" ("
0 0 14 3 7 #"methodV"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"dummy_method1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"dummy_arg_1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #")) ("
0 0 14 3 7 #"methodV"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 13 #"dummy_method2"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"dummy_arg_2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numC"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Object"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 14 3 11 #"ObjectClass"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 6 #"mt-env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #"; Find the name of a variable"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 2 #" ["
0 0 15 3 3 #"for"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 2 #" ("
0 0 14 3 5 #"boxof"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 21 #";(display \"symbol: \")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 14 #";(display for)"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 15 #";(display \"\\n\")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"lookup"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #") "
0 0 19 3 16 #"\" was not found\""
0 0 24 3 4 #"))] "
0 0 17 3 23 #"; variable is undefined"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-name"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 6 #")))   "
0 0 17 3 11 #"; found it!"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 8 #"bind-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 15 3 3 #"for"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 16 #"))])])))        "
0 0 17 3 19 #"; check in the rest"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #"; Auxiliary operators"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"num+"
0 0 24 3 2 #" ["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"numV?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"numV?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"numV"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numV-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"num+"
0 0 24 3 1 #" "
0 0 19 3 38 #"\"One of the arguments is not a number\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"num*"
0 0 24 3 2 #" ["
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #"] ["
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 5 #"numV?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 5 #"numV?"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"numV"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 6 #"numV-n"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"num*"
0 0 24 3 1 #" "
0 0 19 3 38 #"\"One of the arguments is not a number\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-inherited-env"
0 0 24 3 1 #" "
0 0 14 3 11 #"class-value"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 17 #"parent-class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"classV-parent-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"class-value"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Object"
0 0 24 3 4 #")  ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 14 3 6 #"mt-env"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 18 #"parent-class-value"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 18 #"class-ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 19 #"classV-ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 18 #"parent-class-value"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 12 #"bind-ins-var"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 18 #"class-ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 6 #")))] )"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 12 #"bind-ins-var"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-inherited-env"
0 0 24 3 1 #" "
0 0 14 3 18 #"parent-class-value"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"create-object-set-ins-vars"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 11 #"class-value"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 13 #"inherited-env"
0 0 24 3 2 #" ("
0 0 14 3 20 #"create-inherited-env"
0 0 24 3 1 #" "
0 0 14 3 11 #"class-value"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 18 #"class-ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 19 #"classV-ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"class-value"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 12 #"bind-ins-var"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 18 #"class-ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 2 #" ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 12 #"extended-env"
0 0 24 3 2 #" ("
0 0 14 3 6 #"append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 12 #"bind-ins-var"
0 0 24 3 1 #" "
0 0 14 3 13 #"inherited-env"
0 0 24 3 2 #") "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 2 #";("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 13 #"inherited-env"
0 0 17 3 3 #") ("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 5 #"\"\\n\")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 7 #"objectV"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"extended-env"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"object-class-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 17 3 11 #";(display \""
0 0 17 3 12 #"Environment:"
0 0 17 3 1 #" "
0 0 17 3 25 #"\")(display env)(display \""
0 0 17 3 6 #"\\n\\n\")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 2 #";("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 1 #"\""
0 0 17 3 7 #"Method "
0 0 17 3 1 #"\""
0 0 17 3 2 #")("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 11 #"method-name"
0 0 17 3 2 #")("
0 0 17 3 7 #"display"
0 0 17 3 1 #" "
0 0 17 3 5 #"\"\\n\\n"
0 0 17 3 2 #"\")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 11 #";(display \""
0 0 17 3 7 #"Parent:"
0 0 17 3 1 #" "
0 0 17 3 48 #"\")(display (objectV-parent-value obj))(display \""
0 0 17 3 6 #"\\n\\n\")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 10 #"classValue"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 17 #"object-class-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 17 #"parent-class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"classV-parent-name"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"find-method"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Class"
0 0 19 3 1 #" "
0 0 19 3 4 #"does"
0 0 19 3 1 #" "
0 0 19 3 3 #"not"
0 0 19 3 1 #" "
0 0 19 3 7 #"respond"
0 0 19 3 1 #" "
0 0 19 3 2 #"to"
0 0 19 3 1 #" "
0 0 19 3 3 #"the"
0 0 19 3 1 #" "
0 0 19 3 6 #"method"
0 0 19 3 2 #" \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"methodV-name"
0 0 24 3 2 #" ("
0 0 14 3 9 #"classV-m1"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"classV-m1"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"methodV-name"
0 0 24 3 2 #" ("
0 0 14 3 9 #"classV-m2"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"classV-m2"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"find-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 24 29 1 #"\n"
0 9         859 21           0 0           0 142 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-method"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 17 3 55
#";(display \"Environment: \")(display env)(display \"\\n\\n\")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 57
#";(display \"Object \")(display objectValue)(display \"\\n\\n\")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 17 3 73
(
 #";(display \"Parent: \")(display (objectV-parent-value obj))(display "
 #"\"\\n\\n\")"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 10 #"class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"objectV-class-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 10 #"classValue"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 17 #"parent-class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"objectV-class-name"
0 0 24 3 2 #" ("
0 0 14 3 20 #"objectV-parent-value"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 11 #"find-method"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 39 #"\"Class does not respond to the method \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"methodV-name"
0 0 24 3 2 #" ("
0 0 14 3 9 #"classV-m1"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 17 3 34 #";(list (classV-m1 classValue) env)"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 9 #"classV-m1"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"methodV-name"
0 0 24 3 2 #" ("
0 0 14 3 9 #"classV-m2"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 3 #")) "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 17 3 34 #";(list (classV-m2 classValue) env)"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"classV-m2"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 11 #"find-method"
0 0 24 3 2 #" ("
0 0 14 3 20 #"objectV-parent-value"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 2 #") "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 24 29 1 #"\n"
0 9         781 21           0 0           0 129 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ensemble-env"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"begin"
0 0 24 3 1 #" "
0 0 17 3 97
(
 #";(display \"[ensemble-env] Class name \") (display (objectV-class-na"
 #"me objectValue)) (display \"\\n\")"
) 0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 10 #"class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"objectV-class-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 10 #"classValue"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 17 #"parent-class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"objectV-class-name"
0 0 24 3 2 #" ("
0 0 14 3 20 #"objectV-parent-value"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 9 #"objectEnv"
0 0 24 3 2 #" ("
0 0 14 3 15 #"objectV-obj-env"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 12 #"ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 19 #"classV-ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 10 #"classValue"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 17 #"parent-classValue"
0 0 24 3 2 #" ("
0 0 14 3 20 #"objectV-parent-value"
0 0 24 3 1 #" "
0 0 14 3 11 #"objectValue"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 13 #"ins-var-value"
0 0 24 3 2 #" ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"objectEnv"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 11 #"extendedEnv"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 14 3 13 #"ins-var-value"
0 0 24 3 3 #")) "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 75
(
 #";(display \"[ensemble-env] Ins var: \") (display ins-var-name) (disp"
 #"lay \"\\n\")"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-class-name"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 10 #"DummyClass"
0 0 24 3 2 #") "
0 0 17 3 20 #"; Chegou no obj root"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 14 3 11 #"extendedEnv"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 12 #"ensemble-env"
0 0 24 3 1 #" "
0 0 14 3 17 #"parent-classValue"
0 0 24 3 1 #" "
0 0 14 3 11 #"extendedEnv"
0 0 24 3 6 #"))))))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";(extend-env"
0 0 24 29 1 #"\n"
0 0 17 3 42 #"; (bind method-arg (box (interp arg env)))"
0 0 24 29 1 #"\n"
0 0 17 3 32 #"; (objectV-obj-env objectValue))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Interpreter"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ["
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 3 #"] ["
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"Env"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 9 #"type-case"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprC"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 48 #"; Numbers just evaluta to their equivalent Value"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"numC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #"; IDs are retrieved from the Env and unboxed"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"idC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 5 #"unbox"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 42 #"; Sum two numbers using auxiliary function"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"plusC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 4 #"num+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 49 #"; Multiplies two numbers using auxiliary function"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"multC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 3 #") ("
0 0 14 3 4 #"num*"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #"; Conditional operator"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 3 #"ifC"
0 0 24 3 2 #" ("
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 2 #" ("
0 0 14 3 6 #"numV-n"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 5 #"))) ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 24 #"; Sequence of operations"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"seqC"
0 0 24 3 2 #" ("
0 0 14 3 2 #"b1"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 3 #") ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 2 #"b1"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 2 #"b2"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #"))] "
0 0 17 3 37 #"; No side effect between expressions!"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 26 #"; Attribution of variables"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"setC"
0 0 24 3 2 #" ("
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 3 #") ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 6 #"lookup"
0 0 24 3 1 #" "
0 0 14 3 3 #"var"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 8 #"set-box!"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"unbox"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 25 #"; Declaration of variable"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"letC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 8 #"new-bind"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 7 #"new-env"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-bind"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 1 #" "
0 0 14 3 7 #"new-env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 6 #"classC"
0 0 24 3 2 #" ("
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 2 #"m2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"classV"
0 0 24 3 1 #" "
0 0 14 3 11 #"parent-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"ins-var-name"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 2 #"m1"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #") ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 2 #"m2"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 7 #"methodC"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 3 #") ("
0 0 14 3 7 #"methodV"
0 0 24 3 1 #" "
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 4 #"body"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"newC"
0 0 24 3 2 #" ("
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 3 #") ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 6 #"result"
0 0 24 3 2 #" ("
0 0 14 3 26 #"create-object-set-ins-vars"
0 0 24 3 1 #" "
0 0 14 3 10 #"class-name"
0 0 24 3 1 #" "
0 0 14 3 5 #"param"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 17 3 37 #";(display \"Result: \")(display result)"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                      "
0 0 14 3 6 #"result"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 5 #"sendC"
0 0 24 3 2 #" ("
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 3 #") ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 12 #"object-value"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 17 #"object-class-name"
0 0 24 3 2 #" ("
0 0 14 3 18 #"objectV-class-name"
0 0 24 3 1 #" "
0 0 14 3 12 #"object-value"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 10 #"object-env"
0 0 24 3 2 #" ("
0 0 14 3 15 #"objectV-obj-env"
0 0 24 3 1 #" "
0 0 14 3 12 #"object-value"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 6 #"method"
0 0 24 3 2 #" ("
0 0 14 3 11 #"find-method"
0 0 24 3 1 #" "
0 0 14 3 17 #"object-class-name"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-name"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 11 #"method-body"
0 0 24 3 2 #" ("
0 0 14 3 12 #"methodV-body"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 10 #"method-arg"
0 0 24 3 2 #" ("
0 0 14 3 11 #"methodV-arg"
0 0 24 3 1 #" "
0 0 14 3 6 #"method"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 8 #"bind-arg"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 14 3 10 #"method-arg"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 2 #" ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 17 #"bind-extended-env"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 1 #" "
0 0 14 3 8 #"bind-arg"
0 0 24 3 1 #" "
0 0 14 3 10 #"object-env"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                        ["
0 0 14 3 17 #"self-extended-env"
0 0 24 3 2 #" ("
0 0 14 3 10 #"extend-env"
0 0 24 3 2 #" ("
0 0 14 3 4 #"bind"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"self"
0 0 24 3 2 #" ("
0 0 14 3 3 #"box"
0 0 24 3 1 #" "
0 0 14 3 12 #"object-value"
0 0 24 3 3 #")) "
0 0 14 3 17 #"bind-extended-env"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 6 #"interp"
0 0 24 3 1 #" "
0 0 14 3 11 #"method-body"
0 0 24 3 1 #" "
0 0 14 3 17 #"self-extended-env"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #"; Parser"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 3 #"]) "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"ExprS"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 4 #"numS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 13 #"s-exp-symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 3 #"idS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"s-exp-list?"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"sl"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"case"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"+"
0 0 24 3 3 #") ("
0 0 14 3 5 #"plusS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"*"
0 0 24 3 3 #") ("
0 0 14 3 5 #"multS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"-"
0 0 24 3 3 #") ("
0 0 14 3 7 #"bminusS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 1 #"~"
0 0 24 3 3 #") ("
0 0 14 3 7 #"uminusS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"if"
0 0 24 3 3 #") ("
0 0 14 3 3 #"ifS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"seq"
0 0 24 3 3 #") ("
0 0 14 3 4 #"seqS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #":="
0 0 24 3 3 #") ("
0 0 14 3 4 #"setS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 15 3 3 #"let"
0 0 24 3 3 #") ("
0 0 14 3 4 #"letS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"s-exp->list"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"method"
0 0 24 3 3 #") ("
0 0 14 3 7 #"methodS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 5 #"))  ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 15 3 5 #"class"
0 0 24 3 3 #") ("
0 0 14 3 6 #"classS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"new"
0 0 24 3 3 #") ("
0 0 14 3 4 #"newS"
0 0 24 3 2 #" ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"s-exp->number"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 4 #"send"
0 0 24 3 3 #") ("
0 0 14 3 5 #"sendS"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"second"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"s-exp->symbol"
0 0 24 3 2 #" ("
0 0 14 3 5 #"third"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"parse"
0 0 24 3 2 #" ("
0 0 14 3 6 #"fourth"
0 0 24 3 1 #" "
0 0 14 3 2 #"sl"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"invalid list input\""
0 0 24 3 5 #")]))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"error"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"invalid input\""
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #"; Facilitator"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"interpS"
0 0 24 3 2 #" ["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 24 3 4 #"]) ("
0 0 14 3 6 #"interp"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 2 #" ("
0 0 14 3 5 #"parse"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #")) "
0 0 14 3 3 #"env"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 17 3 59
#"; Append this file in the end of your code to run the tests"
0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #"; Test #0: Method call when instantiating Object"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"obj"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 3 #"obj"
0 0 24 3 1 #" "
0 0 14 3 4 #"blah"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 4 #"))) "
0 0 17 3 28 #"; <-- Method does not exist!"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 43 #"\"Class does not respond to the method blah\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #"; Test #1: User-defiend class inheriting from Object, with methods t"
 #"hat change"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";          the attribute of the object (shared between them)."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"Wallet"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 7 #"))) )])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"wallet"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 6 #"Wallet"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Test #2: User-defined class inheriting from Object, with method th"
 #"at delegates"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";          to another via self."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"Wallet"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 2 #" ("
0 0 14 3 1 #"~"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 7 #"))) )])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"wallet"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 6 #"Wallet"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #"; Test #3: User-defined class inheriting from Object, calling a meth"
 #"od that does"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";          not exist."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"Wallet"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 2 #" ("
0 0 14 3 1 #"~"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 7 #"))) )])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"wallet"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 6 #"Wallet"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 9 #"deduction"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 6 #"))))) "
0 0 17 3 28 #"; <-- Method does not exist!"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 48 #"\"Class does not respond to the method deduction\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Test #4: User-define class inheriting from another user-defined cl"
 #"ass,"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";          with method from child overriding the parent's implementa"
 #"tion,"
) 0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";          method from parent delegating to overriden method, and me"
 #"thod"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";          from child accessing attribute of the parent."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"Wallet"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 2 #" ("
0 0 14 3 1 #"~"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 7 #"))) )])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 15 #"WalletWithTaxes"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Wallet"
0 0 24 3 1 #" "
0 0 14 3 3 #"tax"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #") "
0 0 14 3 3 #"tax"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 5 #"dummy"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 5 #") )])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"wallet"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 15 #"WalletWithTaxes"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                       )))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #"; Test #5: User-define class inheriting from another user-defined cl"
 #"ass,"
) 0 0 24 29 1 #"\n"
0 0 17 3 48 #";          calling a method that does not exist."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"test/exn"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"Wallet"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 2 #" ("
0 0 14 3 1 #"~"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 7 #"))) )])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 15 #"WalletWithTaxes"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Wallet"
0 0 24 3 1 #" "
0 0 14 3 3 #"tax"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #" ("
0 0 14 3 2 #":="
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #") "
0 0 14 3 3 #"tax"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 5 #"total"
0 0 24 3 1 #" "
0 0 14 3 5 #"dummy"
0 0 24 3 1 #" "
0 0 14 3 5 #"money"
0 0 24 3 5 #") )])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 6 #"wallet"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 15 #"WalletWithTaxes"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"credit"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 3 #"seq"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 5 #"debit"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 6 #"wallet"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #")) "
0 0 17 3 28 #"; <-- Method does not exist!"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                       )))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 19 3 45 #"\"Class does not respond to the method amount\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #"; Test Ultimate: This one is really hard, extra point for those who "
 #"get it :)"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";                (because then you **really** understood shadowing)"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"interpS"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"Self"
0 0 24 3 2 #" ("
0 0 15 3 5 #"class"
0 0 24 3 1 #" "
0 0 14 3 6 #"Object"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 2 #" ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 4 #"Self"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 6 #"method"
0 0 24 3 1 #" "
0 0 14 3 4 #"Self"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 5 #") )])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 4 #"self"
0 0 24 3 2 #" ("
0 0 14 3 3 #"new"
0 0 24 3 1 #" "
0 0 14 3 4 #"Self"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 4 #"send"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 14 3 4 #"self"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                )))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"numV"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
